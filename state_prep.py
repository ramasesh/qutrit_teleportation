import numpy as np
import scipy.sparse as sps
from functools import reduce
import sim_tools

EPR_init_56 = np.array([[ 0.33514503 +1.69480246e-19j,  0.06767381 +8.68003453e-03j,
        -0.00415662 +1.33821722e-02j, -0.03516017 -1.46489131e-02j,
         0.28595867 +1.05944036e-03j,  0.03648041 +2.34310731e-02j,
        -0.01548859 +3.20706490e-03j, -0.01385849 -2.98560849e-02j,
         0.26773046 +7.31530641e-04j],
       [ 0.06767381 -8.68003453e-03j,  0.03461567 +3.46944695e-17j,
         0.00563750 +6.94193611e-03j, -0.00122860 +9.64283114e-04j,
         0.05597821 +5.88495647e-03j,  0.01127670 -2.89918984e-03j,
         0.00502712 +1.63868945e-02j,  0.00355853 -8.46455320e-03j,
         0.05551632 -2.61298499e-02j],
       [-0.00415662 -1.33821722e-02j,  0.00563750 -6.94193611e-03j,
         0.01755437 -2.77555756e-17j,  0.00332118 -1.77848818e-02j,
         0.00232016 -1.93012218e-02j,  0.00701524 +2.06883218e-04j,
        -0.00366672 -1.41090029e-03j,  0.00139773 +9.38885604e-03j,
        -0.00608153 -8.01919237e-03j],
       [-0.03516017 +1.46489131e-02j, -0.00122860 -9.64283114e-04j,
         0.00332118 +1.77848818e-02j,  0.01641003 -2.25514052e-17j,
        -0.03423024 +4.74972003e-03j, -0.00287935 -5.49712596e-03j,
         0.00168298 -3.63413921e-04j,  0.01156159 -3.20665389e-03j,
        -0.03414907 +8.64073186e-03j],
       [ 0.28595867 -1.05944036e-03j,  0.05597821 -5.88495647e-03j,
         0.00232016 +1.93012218e-02j, -0.03423024 -4.74972003e-03j,
         0.26771485 -2.77555756e-17j,  0.03800362 -7.39908031e-05j,
        -0.02791874 -2.50963751e-03j, -0.02805356 -2.73929171e-02j,
         0.23785769 -3.93875302e-02j],
       [ 0.03648041 -2.34310731e-02j,  0.01127670 +2.89918984e-03j,
         0.00701524 -2.06883218e-04j, -0.00287935 +5.49712596e-03j,
         0.03800362 +7.39908031e-05j,  0.02849123 +4.16333634e-17j,
        -0.01517394 +8.88564842e-03j, -0.00291755 -1.06002540e-02j,
         0.03471126 +1.50898204e-03j],
       [-0.01548859 -3.20706490e-03j,  0.00502712 -1.63868945e-02j,
        -0.00366672 +1.41090029e-03j,  0.00168298 +3.63413921e-04j,
        -0.02791874 +2.50963751e-03j, -0.01517394 -8.88564842e-03j,
         0.00790700 +0.00000000e+00j,  0.00296167 +5.03941104e-03j,
        -0.02030180 +9.08654637e-03j],
       [-0.01385849 +2.98560849e-02j,  0.00355853 +8.46455320e-03j,
         0.00139773 -9.38885604e-03j,  0.01156159 +3.20665389e-03j,
        -0.02805356 +2.73929171e-02j, -0.00291755 +1.06002540e-02j,
         0.00296167 -5.03941104e-03j,  0.02181930 +0.00000000e+00j,
        -0.01851778 +2.05532561e-02j],
       [ 0.26773046 -7.31530641e-04j,  0.05551632 +2.61298499e-02j,
        -0.00608153 +8.01919237e-03j, -0.03414907 -8.64073186e-03j,
         0.23785769 +3.93875302e-02j,  0.03471126 -1.50898204e-03j,
        -0.02030180 -9.08654637e-03j, -0.01851778 -2.05532561e-02j,
         0.27034252 +4.16333634e-17j]])


EPR_init_07=np.array([[ 0.33380981 +2.96500013e-19j, -0.03038093 +4.75951593e-02j,
   0.01774479 -3.70688238e-03j,  0.00439235 +5.61383937e-02j,
   0.29317946 -1.89935259e-02j, -0.00227250 +1.82212154e-02j,
   0.00479467 +1.02198405e-02j,  0.00377192 -1.31967857e-02j,
   0.25044027 -4.68959849e-02j],
 [-0.03038093 -4.75951593e-02j,  0.02120527 +5.72458747e-17j,
  -0.00036196 +2.33329864e-03j,  0.00063568 +8.09439275e-03j,
  -0.05319363 -4.03087778e-02j, -0.00162158 -4.80631402e-03j,
   0.00837491 +4.39531320e-03j, -0.00232170 +1.41191014e-03j,
  -0.03550200 -1.63089043e-02j],
 [ 0.01774479 +3.70688238e-03j, -0.00036196 -2.33329864e-03j,
   0.00764802 +2.08166817e-17j, -0.02503692 +8.61670656e-03j,
   0.00374733 +5.83754040e-03j, -0.00161915 -4.27510318e-03j,
  -0.00854706 +9.16175009e-03j,  0.00298502 +4.37058941e-03j,
   0.00510433 +9.42122015e-03j],
 [ 0.00439235 -5.61383937e-02j,  0.00063568 -8.09439275e-03j,
  -0.02503692 -8.61670656e-03j,  0.01398723 +6.93889390e-18j,
  -0.00411372 -5.46670981e-02j,  0.00338143 -2.10299775e-03j,
   0.00223918 -1.05336915e-03j, -0.01772962 -1.49782993e-02j,
  -0.01285680 -3.18108046e-02j],
 [ 0.29317946 +1.89935259e-02j, -0.05319363 +4.03087778e-02j,
   0.00374733 -5.83754040e-03j, -0.00411372 +5.46670981e-02j,
   0.31378305 -5.55111512e-17j,  0.00360500 +1.58838038e-02j,
   0.00204286 +1.78176400e-02j, -0.00239516 +1.70338031e-03j,
   0.26478674 -2.71553728e-02j],
 [-0.00227250 -1.82212154e-02j, -0.00162158 +4.80631402e-03j,
  -0.00161915 +4.27510318e-03j,  0.00338143 +2.10299775e-03j,
   0.00360500 -1.58838038e-02j,  0.02411535 +2.77555756e-17j,
  -0.00230372 +4.00833768e-03j,  0.01035430 +1.96980335e-03j,
  -0.00433004 -1.11639605e-02j],
 [ 0.00479467 -1.02198405e-02j,  0.00837491 -4.39531320e-03j,
  -0.00854706 -9.16175009e-03j,  0.00223918 +1.05336915e-03j,
   0.00204286 -1.78176400e-02j, -0.00230372 -4.00833768e-03j,
   0.00345237 +6.93889390e-18j, -0.00166517 -1.05077889e-03j,
  -0.00323072 -1.10480015e-02j],
 [ 0.00377192 +1.31967857e-02j, -0.00232170 -1.41191014e-03j,
   0.00298502 -4.37058941e-03j, -0.01772962 +1.49782993e-02j,
  -0.00239516 -1.70338031e-03j,  0.01035430 -1.96980335e-03j,
  -0.00166517 +1.05077889e-03j,  0.02288517 +1.38777878e-17j,
   0.01184281 +1.52742440e-03j],
 [ 0.25044027 +4.68959849e-02j, -0.03550200 +1.63089043e-02j,
   0.00510433 -9.42122015e-03j, -0.01285680 +3.18108046e-02j,
   0.26478674 +2.71553728e-02j, -0.00433004 +1.11639605e-02j,
  -0.00323072 +1.10480015e-02j,  0.01184281 -1.52742440e-03j,
   0.25911373 +3.46944695e-17j]])

rho_EPR_56_expt = sps.csr_matrix(EPR_init_56)
rho_EPR_07_expt = sps.csr_matrix(EPR_init_07)

psi_EPR_ideal = np.array([1., 0, 0, 0, 1., 0, 0, 0, 1.])/np.sqrt(3)
rho_EPR_ideal = sps.csr_matrix(np.outer(psi_EPR_ideal, np.conj(psi_EPR_ideal.T)))

Fid_EPR_56 = np.real(sim_tools.fidelity(rho_EPR_56_expt.todense(), rho_EPR_ideal.todense()))
Fid_EPR_07 = np.real(sim_tools.fidelity(rho_EPR_07_expt.todense(), rho_EPR_ideal.todense()))

w1 = np.exp(2*np.pi/3*1j)
w2 = np.exp(-2*np.pi/3*1j)

two_design_states = [np.array([1., 0., 0.]),
                     np.array([0., 1., 0.]),
                     np.array([0., 0., 1.]),
                     np.array([1., 1., 1.])/np.sqrt(3),
                     np.array([1., w2, w1])/np.sqrt(3),
                     np.array([1., w1, w2])/np.sqrt(3),
                     np.array([1., w1, 1.])/np.sqrt(3),
                     np.array([w1, 1., 1.])/np.sqrt(3),
                     np.array([1., 1., w1])/np.sqrt(3),
                     np.array([1., w2, 1.])/np.sqrt(3),
                     np.array([w2, 1., 1.])/np.sqrt(3),
                     np.array([1., 1., w2])/np.sqrt(3)]


